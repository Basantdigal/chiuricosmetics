# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"] # Or your default branch (e.g., master)

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write      # Required to deploy to Pages
  id-token: write   # Required to authenticate with OIDC

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Use the latest version
      - name: Set up Node
        uses: actions/setup-node@v4 # Use the latest version
        with:
          node-version: "18" # Specify your Node.js version
          cache: 'npm' # Or 'yarn'
      - name: Install dependencies
        run: npm ci # Use 'ci' for cleaner installs in CI environments, or 'npm install' / 'yarn install'
      - name: Build
        run: npm run build # Or your build command (e.g., yarn build)
        # If your build command needs environment variables, set them here:
        # env:
        #   CI: false # Example: Some build tools behave differently with CI=true
        #   PUBLIC_URL: /<repository-name> # Important if your site isn't at the root domain!
      - name: Setup Pages
        uses: actions/configure-pages@v4 # Use the latest version
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Use the latest version
        with:
          # Upload the directory your build step outputs to
          path: './build' # Or './dist', './public', etc.
      # Optional: Add this step if your framework needs a .nojekyll file
      # - name: Create .nojekyll file
      #   run: touch ./build/.nojekyll # Adjust path to your build output directory
      #   working-directory: ./build # Adjust path

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Depends on the build job completing successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Use the latest version
        